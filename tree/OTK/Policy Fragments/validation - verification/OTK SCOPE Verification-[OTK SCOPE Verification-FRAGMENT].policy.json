{
  "goid": "e001cfd0c1c1ffaa18e187b5e72fd147",
  "guid": "2792f49f-c879-4eb1-a1e1-326bad2dcb74",
  "name": "OTK SCOPE Verification",
  "policyType": "FRAGMENT",
  "checksum": "5a3390d79fa2fd6bac3feeef16e5b9aba10d6c37",
  "folderPath": "/OTK/Policy Fragments/validation - verification",
  "soap": false,
  "policy": {
    "xml": "<wsp:Policy xmlns:L7p=\"http://www.layer7tech.com/ws/policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2002/12/policy\">\n    <wsp:All wsp:Usage=\"Required\">\n        <L7p:CommentAssertion>\n            <L7p:Comment stringValue=\" ============================================\"/>\n        </L7p:CommentAssertion>\n        <L7p:CommentAssertion>\n            <L7p:Comment stringValue=\" === ***  THIS POLICY IS READ ONLY ***\"/>\n        </L7p:CommentAssertion>\n        <L7p:CommentAssertion>\n            <L7p:Comment stringValue=\" === If you have the need to customize this policy\"/>\n        </L7p:CommentAssertion>\n        <L7p:CommentAssertion>\n            <L7p:Comment stringValue=\" === please contact CA APIM Support so we can improve customization capability\"/>\n        </L7p:CommentAssertion>\n        <L7p:CommentAssertion>\n            <L7p:Comment stringValue=\" ============================================\"/>\n        </L7p:CommentAssertion>\n        <L7p:CommentAssertion>\n            <L7p:Comment stringValue=\"This policy can be found and should be used as 'Encapsulated Assertion'!\"/>\n        </L7p:CommentAssertion>\n        <L7p:CommentAssertion>\n            <L7p:Comment stringValue=\"This policy validates SCOPE\"/>\n        </L7p:CommentAssertion>\n        <L7p:SetVariable>\n            <L7p:AssertionComment assertionComment=\"included\">\n                <L7p:Properties mapValue=\"included\">\n                    <L7p:entry>\n                        <L7p:key stringValue=\"RIGHT.COMMENT\"/>\n                        <L7p:value stringValue=\"resetting any context variable to handle cases where it is not defined\"/>\n                    </L7p:entry>\n                </L7p:Properties>\n            </L7p:AssertionComment>\n            <L7p:Base64Expression stringValue=\"JHthbnl9\"/>\n            <L7p:VariableToSet stringValue=\"any\"/>\n        </L7p:SetVariable>\n        <L7p:SetVariable>\n            <L7p:AssertionComment assertionComment=\"included\">\n                <L7p:Properties mapValue=\"included\">\n                    <L7p:entry>\n                        <L7p:key stringValue=\"LEFT.COMMENT\"/>\n                        <L7p:value stringValue=\"initialize\"/>\n                    </L7p:entry>\n                    <L7p:entry>\n                        <L7p:key stringValue=\"RIGHT.COMMENT\"/>\n                        <L7p:value stringValue=\"will be overwritten in the case of an error\"/>\n                    </L7p:entry>\n                </L7p:Properties>\n            </L7p:AssertionComment>\n            <L7p:Base64Expression stringValue=\"\"/>\n            <L7p:VariableToSet stringValue=\"error.code\"/>\n        </L7p:SetVariable>\n        <L7p:Split>\n            <L7p:AssertionComment assertionComment=\"included\">\n                <L7p:Properties mapValue=\"included\">\n                    <L7p:entry>\n                        <L7p:key stringValue=\"LEFT.COMMENT\"/>\n                        <L7p:value stringValue=\"valid SCOPE\"/>\n                    </L7p:entry>\n                </L7p:Properties>\n            </L7p:AssertionComment>\n            <L7p:InputVariable stringValue=\"scope.granted\"/>\n            <L7p:OutputVariable stringValue=\"scopeGranted\"/>\n            <L7p:SplitPattern stringValue=\"[ ]\"/>\n        </L7p:Split>\n        <L7p:Split>\n            <L7p:AssertionComment assertionComment=\"included\">\n                <L7p:Properties mapValue=\"included\">\n                    <L7p:entry>\n                        <L7p:key stringValue=\"LEFT.COMMENT\"/>\n                        <L7p:value stringValue=\"required SCOPE\"/>\n                    </L7p:entry>\n                </L7p:Properties>\n            </L7p:AssertionComment>\n            <L7p:InputVariable stringValue=\"scope.required\"/>\n            <L7p:OutputVariable stringValue=\"scopeRequired\"/>\n            <L7p:SplitPattern stringValue=\"[ ]\"/>\n        </L7p:Split>\n        <wsp:OneOrMore wsp:Usage=\"Required\">\n            <L7p:ComparisonAssertion>\n                <L7p:Expression1 stringValue=\"${scope.required}\"/>\n                <L7p:Expression2 stringValue=\"\"/>\n                <L7p:Operator operator=\"EMPTY\"/>\n                <L7p:Predicates predicates=\"included\">\n                    <L7p:item binary=\"included\">\n                        <L7p:Operator operator=\"EMPTY\"/>\n                        <L7p:RightValue stringValue=\"\"/>\n                    </L7p:item>\n                </L7p:Predicates>\n            </L7p:ComparisonAssertion>\n            <wsp:All wsp:Usage=\"Required\">\n                <L7p:ForEachLoop L7p:Usage=\"Required\" iterationLimit=\"100\" loopVariable=\"scopeRequired\" variablePrefix=\"verifyScope\">\n                    <L7p:SetVariable>\n                        <L7p:Base64Expression stringValue=\"ZmFsc2U=\"/>\n                        <L7p:VariableToSet stringValue=\"found\"/>\n                    </L7p:SetVariable>\n                    <wsp:OneOrMore wsp:Usage=\"Required\">\n                        <wsp:All wsp:Usage=\"Required\">\n                            <L7p:ComparisonAssertion>\n                                <L7p:Expression1 stringValue=\"${scopeGranted}\"/>\n                                <L7p:Expression2 stringValue=\"${verifyScope.current}\"/>\n                                <L7p:MultivaluedComparison multivaluedComparison=\"ANY\"/>\n                                <L7p:Predicates predicates=\"included\">\n                                    <L7p:item binary=\"included\">\n                                    <L7p:RightValue stringValue=\"${verifyScope.current}\"/>\n                                    </L7p:item>\n                                </L7p:Predicates>\n                            </L7p:ComparisonAssertion>\n                            <wsp:OneOrMore wsp:Usage=\"Required\">\n                                <wsp:All wsp:Usage=\"Required\">\n                                    <L7p:ComparisonAssertion>\n                                    <L7p:Expression1 stringValue=\"${any}\"/>\n                                    <L7p:Expression2 stringValue=\"true\"/>\n                                    <L7p:Predicates predicates=\"included\">\n                                    <L7p:item binary=\"included\">\n                                    <L7p:RightValue stringValue=\"true\"/>\n                                    </L7p:item>\n                                    </L7p:Predicates>\n                                    </L7p:ComparisonAssertion>\n                                    <L7p:SetVariable>\n                                    <L7p:Base64Expression stringValue=\"dHJ1ZQ==\"/>\n                                    <L7p:VariableToSet stringValue=\"verifyScope.break\"/>\n                                    </L7p:SetVariable>\n                                    <L7p:assertionComment>\n                                    <L7p:Properties mapValue=\"included\">\n                                    <L7p:entry>\n                                    <L7p:key stringValue=\"LEFT.COMMENT\"/>\n                                    <L7p:value stringValue=\"any\"/>\n                                    </L7p:entry>\n                                    <L7p:entry>\n                                    <L7p:key stringValue=\"RIGHT.COMMENT\"/>\n                                    <L7p:value stringValue=\"pass and break from iteration if any scopes are found\"/>\n                                    </L7p:entry>\n                                    </L7p:Properties>\n                                    </L7p:assertionComment>\n                                </wsp:All>\n                                <wsp:All wsp:Usage=\"Required\">\n                                    <L7p:ComparisonAssertion>\n                                    <L7p:Expression1 stringValue=\"${any}\"/>\n                                    <L7p:Expression2 stringValue=\"true\"/>\n                                    <L7p:Operator operator=\"NE\"/>\n                                    <L7p:Predicates predicates=\"included\">\n                                    <L7p:item binary=\"included\">\n                                    <L7p:Operator operator=\"NE\"/>\n                                    <L7p:RightValue stringValue=\"true\"/>\n                                    </L7p:item>\n                                    </L7p:Predicates>\n                                    </L7p:ComparisonAssertion>\n                                    <L7p:assertionComment>\n                                    <L7p:Properties mapValue=\"included\">\n                                    <L7p:entry>\n                                    <L7p:key stringValue=\"LEFT.COMMENT\"/>\n                                    <L7p:value stringValue=\"all\"/>\n                                    </L7p:entry>\n                                    <L7p:entry>\n                                    <L7p:key stringValue=\"RIGHT.COMMENT\"/>\n                                    <L7p:value stringValue=\"if we want to ensure all scopes match, we need to keep iterating\"/>\n                                    </L7p:entry>\n                                    </L7p:Properties>\n                                    </L7p:assertionComment>\n                                </wsp:All>\n                            </wsp:OneOrMore>\n                            <L7p:SetVariable>\n                                <L7p:Base64Expression stringValue=\"dHJ1ZQ==\"/>\n                                <L7p:VariableToSet stringValue=\"found\"/>\n                            </L7p:SetVariable>\n                        </wsp:All>\n                        <wsp:All wsp:Usage=\"Required\">\n                            <L7p:ComparisonAssertion>\n                                <L7p:Expression1 stringValue=\"${scopeGranted}\"/>\n                                <L7p:Expression2 stringValue=\"${verifyScope.current}\"/>\n                                <L7p:MultivaluedComparison multivaluedComparison=\"ANY\"/>\n                                <L7p:Operator operator=\"NE\"/>\n                                <L7p:Predicates predicates=\"included\">\n                                    <L7p:item binary=\"included\">\n                                    <L7p:Operator operator=\"NE\"/>\n                                    <L7p:RightValue stringValue=\"${verifyScope.current}\"/>\n                                    </L7p:item>\n                                </L7p:Predicates>\n                            </L7p:ComparisonAssertion>\n                            <wsp:OneOrMore wsp:Usage=\"Required\">\n                                <wsp:All wsp:Usage=\"Required\">\n                                    <L7p:ComparisonAssertion>\n                                    <L7p:Expression1 stringValue=\"${any}\"/>\n                                    <L7p:Expression2 stringValue=\"true\"/>\n                                    <L7p:Operator operator=\"NE\"/>\n                                    <L7p:Predicates predicates=\"included\">\n                                    <L7p:item binary=\"included\">\n                                    <L7p:Operator operator=\"NE\"/>\n                                    <L7p:RightValue stringValue=\"true\"/>\n                                    </L7p:item>\n                                    </L7p:Predicates>\n                                    </L7p:ComparisonAssertion>\n                                    <L7p:SetVariable>\n                                    <L7p:Base64Expression stringValue=\"ZmFsc2U=\"/>\n                                    <L7p:VariableToSet stringValue=\"found\"/>\n                                    </L7p:SetVariable>\n                                    <L7p:SetVariable>\n                                    <L7p:Base64Expression stringValue=\"dHJ1ZQ==\"/>\n                                    <L7p:VariableToSet stringValue=\"verifyScope.break\"/>\n                                    </L7p:SetVariable>\n                                    <L7p:assertionComment>\n                                    <L7p:Properties mapValue=\"included\">\n                                    <L7p:entry>\n                                    <L7p:key stringValue=\"LEFT.COMMENT\"/>\n                                    <L7p:value stringValue=\"all\"/>\n                                    </L7p:entry>\n                                    <L7p:entry>\n                                    <L7p:key stringValue=\"RIGHT.COMMENT\"/>\n                                    <L7p:value stringValue=\"if we require all scopes to be found, and we find a scope that doesn't match, break\"/>\n                                    </L7p:entry>\n                                    </L7p:Properties>\n                                    </L7p:assertionComment>\n                                </wsp:All>\n                                <wsp:All wsp:Usage=\"Required\">\n                                    <L7p:ComparisonAssertion>\n                                    <L7p:Expression1 stringValue=\"${any}\"/>\n                                    <L7p:Expression2 stringValue=\"true\"/>\n                                    <L7p:Predicates predicates=\"included\">\n                                    <L7p:item binary=\"included\">\n                                    <L7p:RightValue stringValue=\"true\"/>\n                                    </L7p:item>\n                                    </L7p:Predicates>\n                                    </L7p:ComparisonAssertion>\n                                    <L7p:assertionComment>\n                                    <L7p:Properties mapValue=\"included\">\n                                    <L7p:entry>\n                                    <L7p:key stringValue=\"LEFT.COMMENT\"/>\n                                    <L7p:value stringValue=\"any\"/>\n                                    </L7p:entry>\n                                    <L7p:entry>\n                                    <L7p:key stringValue=\"RIGHT.COMMENT\"/>\n                                    <L7p:value stringValue=\"continue iterating if 'any' flag is true\"/>\n                                    </L7p:entry>\n                                    </L7p:Properties>\n                                    </L7p:assertionComment>\n                                </wsp:All>\n                            </wsp:OneOrMore>\n                        </wsp:All>\n                        <L7p:assertionComment>\n                            <L7p:Properties mapValue=\"included\">\n                                <L7p:entry>\n                                    <L7p:key stringValue=\"LEFT.COMMENT\"/>\n                                    <L7p:value stringValue=\"validate\"/>\n                                </L7p:entry>\n                            </L7p:Properties>\n                        </L7p:assertionComment>\n                    </wsp:OneOrMore>\n                    <L7p:assertionComment>\n                        <L7p:Properties mapValue=\"included\">\n                            <L7p:entry>\n                                <L7p:key stringValue=\"LEFT.COMMENT\"/>\n                                <L7p:value stringValue=\"iterate\"/>\n                            </L7p:entry>\n                            <L7p:entry>\n                                <L7p:key stringValue=\"RIGHT.COMMENT\"/>\n                                <L7p:value stringValue=\"over each SCOPE\"/>\n                            </L7p:entry>\n                        </L7p:Properties>\n                    </L7p:assertionComment>\n                </L7p:ForEachLoop>\n                <wsp:OneOrMore wsp:Usage=\"Required\">\n                    <wsp:All wsp:Usage=\"Required\">\n                        <L7p:ComparisonAssertion>\n                            <L7p:Expression1 stringValue=\"${found}\"/>\n                            <L7p:Expression2 stringValue=\"true\"/>\n                            <L7p:Predicates predicates=\"included\">\n                                <L7p:item binary=\"included\">\n                                    <L7p:RightValue stringValue=\"true\"/>\n                                </L7p:item>\n                            </L7p:Predicates>\n                        </L7p:ComparisonAssertion>\n                        <L7p:ComparisonAssertion>\n                            <L7p:Expression1 stringValue=\"${fail}\"/>\n                            <L7p:Expression2 stringValue=\"true\"/>\n                            <L7p:Operator operator=\"NE\"/>\n                            <L7p:Predicates predicates=\"included\">\n                                <L7p:item binary=\"included\">\n                                    <L7p:Operator operator=\"NE\"/>\n                                    <L7p:RightValue stringValue=\"true\"/>\n                                </L7p:item>\n                            </L7p:Predicates>\n                        </L7p:ComparisonAssertion>\n                        <L7p:assertionComment>\n                            <L7p:Properties mapValue=\"included\">\n                                <L7p:entry>\n                                    <L7p:key stringValue=\"RIGHT.COMMENT\"/>\n                                    <L7p:value stringValue=\"pass if scopes were found and 'fail' flag is not set\"/>\n                                </L7p:entry>\n                            </L7p:Properties>\n                        </L7p:assertionComment>\n                    </wsp:All>\n                    <wsp:All wsp:Usage=\"Required\">\n                        <L7p:ComparisonAssertion>\n                            <L7p:Expression1 stringValue=\"${found}\"/>\n                            <L7p:Expression2 stringValue=\"true\"/>\n                            <L7p:Operator operator=\"NE\"/>\n                            <L7p:Predicates predicates=\"included\">\n                                <L7p:item binary=\"included\">\n                                    <L7p:Operator operator=\"NE\"/>\n                                    <L7p:RightValue stringValue=\"true\"/>\n                                </L7p:item>\n                            </L7p:Predicates>\n                        </L7p:ComparisonAssertion>\n                        <L7p:ComparisonAssertion>\n                            <L7p:Expression1 stringValue=\"${fail}\"/>\n                            <L7p:Expression2 stringValue=\"true\"/>\n                            <L7p:Predicates predicates=\"included\">\n                                <L7p:item binary=\"included\">\n                                    <L7p:RightValue stringValue=\"true\"/>\n                                </L7p:item>\n                            </L7p:Predicates>\n                        </L7p:ComparisonAssertion>\n                        <L7p:assertionComment>\n                            <L7p:Properties mapValue=\"included\">\n                                <L7p:entry>\n                                    <L7p:key stringValue=\"RIGHT.COMMENT\"/>\n                                    <L7p:value stringValue=\"pass if 'fail' flag is set and the scope is not found\"/>\n                                </L7p:entry>\n                            </L7p:Properties>\n                        </L7p:assertionComment>\n                    </wsp:All>\n                </wsp:OneOrMore>\n            </wsp:All>\n            <wsp:All wsp:Usage=\"Required\">\n                <L7p:SetVariable>\n                    <L7p:Base64Expression stringValue=\"MTE1\"/>\n                    <L7p:VariableToSet stringValue=\"error.code\"/>\n                </L7p:SetVariable>\n                <L7p:FalseAssertion/>\n                <L7p:assertionComment>\n                    <L7p:Properties mapValue=\"included\">\n                        <L7p:entry>\n                            <L7p:key stringValue=\"LEFT.COMMENT\"/>\n                            <L7p:value stringValue=\"error\"/>\n                        </L7p:entry>\n                    </L7p:Properties>\n                </L7p:assertionComment>\n            </wsp:All>\n            <L7p:assertionComment>\n                <L7p:Properties mapValue=\"included\">\n                    <L7p:entry>\n                        <L7p:key stringValue=\"LEFT.COMMENT\"/>\n                        <L7p:value stringValue=\"verification\"/>\n                    </L7p:entry>\n                </L7p:Properties>\n            </L7p:assertionComment>\n        </wsp:OneOrMore>\n    </wsp:All>\n</wsp:Policy>"
  }
}
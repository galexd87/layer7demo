{
  "goid": "e001cfd0c1c1ffaa18e187b5e72fd1bf",
  "guid": "14b53d6c-11e6-4896-81bf-47181a436e2b",
  "name": "OTK SCOPE Issuing DEPRECATED",
  "policyType": "FRAGMENT",
  "checksum": "87041e97b07e6ec846c6bcbe49088f1376c68884",
  "folderPath": "/OTK/Policy Fragments/validation - verification",
  "soap": false,
  "policy": {
    "xml": "<wsp:Policy xmlns:L7p=\"http://www.layer7tech.com/ws/policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2002/12/policy\">\n    <wsp:All wsp:Usage=\"Required\">\n        <L7p:CommentAssertion>\n            <L7p:Comment stringValue=\" ============================================\"/>\n        </L7p:CommentAssertion>\n        <L7p:CommentAssertion>\n            <L7p:Comment stringValue=\" === ***  THIS POLICY IS READ ONLY ***\"/>\n        </L7p:CommentAssertion>\n        <L7p:CommentAssertion>\n            <L7p:Comment stringValue=\" === If you have the need to customize this policy\"/>\n        </L7p:CommentAssertion>\n        <L7p:CommentAssertion>\n            <L7p:Comment stringValue=\" === please contact CA APIM Support so we can improve customization capability\"/>\n        </L7p:CommentAssertion>\n        <L7p:CommentAssertion>\n            <L7p:Comment stringValue=\" ============================================\"/>\n        </L7p:CommentAssertion>\n        <L7p:CommentAssertion>\n            <L7p:Comment stringValue=\"This policy can be found and should be used as 'Encapsulated Assertion'!\"/>\n        </L7p:CommentAssertion>\n        <L7p:CommentAssertion>\n            <L7p:Comment stringValue=\"This policy will validate SCOPE. It will reject all non-registered but reguested SCOPE values.\"/>\n        </L7p:CommentAssertion>\n        <L7p:CommentAssertion>\n            <L7p:Comment stringValue=\"If only non-registered SCOPE values are requested the policy will fail.\"/>\n        </L7p:CommentAssertion>\n        <L7p:CommentAssertion>\n            <L7p:Comment stringValue=\"If no SCOPE was registered and no SCOPE was requested SCOPE will be set to 'oob'\"/>\n        </L7p:CommentAssertion>\n        <L7p:CommentAssertion>\n            <L7p:Comment stringValue=\"*************************************************\"/>\n        </L7p:CommentAssertion>\n        <L7p:CommentAssertion>\n            <L7p:Comment stringValue=\"Input variables: scope.registered, scope.requested\"/>\n        </L7p:CommentAssertion>\n        <L7p:CommentAssertion>\n            <L7p:Comment stringValue=\"Output variables: scope.granted\"/>\n        </L7p:CommentAssertion>\n        <L7p:CommentAssertion>\n            <L7p:Comment stringValue=\"*************************************************\"/>\n        </L7p:CommentAssertion>\n        <L7p:SetVariable>\n            <L7p:Base64Expression stringValue=\"JHtzY29wZS5yZXF1ZXN0ZWR9\"/>\n            <L7p:VariableToSet stringValue=\"remember_requested_scope\"/>\n        </L7p:SetVariable>\n        <wsp:OneOrMore wsp:Usage=\"Required\">\n            <wsp:All wsp:Usage=\"Required\">\n                <wsp:OneOrMore wsp:Usage=\"Required\">\n                    <L7p:ComparisonAssertion>\n                        <L7p:CaseSensitive booleanValue=\"false\"/>\n                        <L7p:Expression1 stringValue=\"${scope.registered}\"/>\n                        <L7p:Expression2 stringValue=\"oob\"/>\n                        <L7p:Operator operator=\"EMPTY\"/>\n                        <L7p:Predicates predicates=\"included\">\n                            <L7p:item binary=\"included\">\n                                <L7p:CaseSensitive booleanValue=\"false\"/>\n                                <L7p:Operator operator=\"EMPTY\"/>\n                                <L7p:RightValue stringValue=\"oob\"/>\n                            </L7p:item>\n                        </L7p:Predicates>\n                    </L7p:ComparisonAssertion>\n                    <L7p:ComparisonAssertion>\n                        <L7p:CaseSensitive booleanValue=\"false\"/>\n                        <L7p:Expression1 stringValue=\"${scope.registered}\"/>\n                        <L7p:Expression2 stringValue=\"oob\"/>\n                        <L7p:Predicates predicates=\"included\">\n                            <L7p:item binary=\"included\">\n                                <L7p:CaseSensitive booleanValue=\"false\"/>\n                                <L7p:RightValue stringValue=\"oob\"/>\n                            </L7p:item>\n                        </L7p:Predicates>\n                    </L7p:ComparisonAssertion>\n                </wsp:OneOrMore>\n                <L7p:SetVariable>\n                    <L7p:Base64Expression stringValue=\"b29i\"/>\n                    <L7p:VariableToSet stringValue=\"scope.granted\"/>\n                </L7p:SetVariable>\n                <L7p:assertionComment>\n                    <L7p:Properties mapValue=\"included\">\n                        <L7p:entry>\n                            <L7p:key stringValue=\"LEFT.COMMENT\"/>\n                            <L7p:value stringValue=\"case: 01\"/>\n                        </L7p:entry>\n                        <L7p:entry>\n                            <L7p:key stringValue=\"RIGHT.COMMENT\"/>\n                            <L7p:value stringValueReference=\"inline\"><![CDATA[No SCOPE registered --> grant none --> oob;\n                registered: oob;\n                requested: none | scopea;\n                grant:         oob;]]></L7p:value>\n                        </L7p:entry>\n                    </L7p:Properties>\n                </L7p:assertionComment>\n            </wsp:All>\n            <wsp:All wsp:Usage=\"Required\">\n                <L7p:ComparisonAssertion>\n                    <L7p:CaseSensitive booleanValue=\"false\"/>\n                    <L7p:Expression1 stringValue=\"${scope.requested}\"/>\n                    <L7p:Expression2 stringValue=\"oob\"/>\n                    <L7p:Operator operator=\"EMPTY\"/>\n                    <L7p:Predicates predicates=\"included\">\n                        <L7p:item binary=\"included\">\n                            <L7p:CaseSensitive booleanValue=\"false\"/>\n                            <L7p:Operator operator=\"EMPTY\"/>\n                            <L7p:RightValue stringValue=\"oob\"/>\n                        </L7p:item>\n                    </L7p:Predicates>\n                </L7p:ComparisonAssertion>\n                <L7p:SetVariable>\n                    <L7p:Base64Expression stringValue=\"b29i\"/>\n                    <L7p:VariableToSet stringValue=\"scope.granted\"/>\n                </L7p:SetVariable>\n                <L7p:assertionComment>\n                    <L7p:Properties mapValue=\"included\">\n                        <L7p:entry>\n                            <L7p:key stringValue=\"LEFT.COMMENT\"/>\n                            <L7p:value stringValue=\"case: 02\"/>\n                        </L7p:entry>\n                        <L7p:entry>\n                            <L7p:key stringValue=\"RIGHT.COMMENT\"/>\n                            <L7p:value stringValueReference=\"inline\"><![CDATA[SCOPE registered but none requested --> grant none --> oob, otherwise a client could spoof all possible SCOPEs;\n                registered: scopea scopeb;\n                requested: none;\n                grant: oob;]]></L7p:value>\n                        </L7p:entry>\n                    </L7p:Properties>\n                </L7p:assertionComment>\n            </wsp:All>\n            <wsp:All wsp:Usage=\"Required\">\n                <L7p:ComparisonAssertion>\n                    <L7p:Expression1 stringValue=\"${scope.registered}\"/>\n                    <L7p:Expression2 stringValue=\"${scope.requested}\"/>\n                    <L7p:Predicates predicates=\"included\">\n                        <L7p:item binary=\"included\">\n                            <L7p:RightValue stringValue=\"${scope.requested}\"/>\n                        </L7p:item>\n                    </L7p:Predicates>\n                </L7p:ComparisonAssertion>\n                <L7p:SetVariable>\n                    <L7p:Base64Expression stringValue=\"JHtzY29wZS5yZWdpc3RlcmVkfQ==\"/>\n                    <L7p:VariableToSet stringValue=\"scope.granted\"/>\n                </L7p:SetVariable>\n                <L7p:assertionComment>\n                    <L7p:Properties mapValue=\"included\">\n                        <L7p:entry>\n                            <L7p:key stringValue=\"LEFT.COMMENT\"/>\n                            <L7p:value stringValue=\"case: 03\"/>\n                        </L7p:entry>\n                        <L7p:entry>\n                            <L7p:key stringValue=\"RIGHT.COMMENT\"/>\n                            <L7p:value stringValueReference=\"inline\"><![CDATA[SCOPE registered is the same as SCOPE requested --> grant requested SCOPE;\n                registered: scopea scopeb scopec;\n                requested: scopea scopeb scopec;\n                grant: scopea scopeb scopec;]]></L7p:value>\n                        </L7p:entry>\n                    </L7p:Properties>\n                </L7p:assertionComment>\n            </wsp:All>\n            <wsp:All wsp:Usage=\"Required\">\n                <L7p:Split>\n                    <L7p:IgnoreEmptyValues booleanValue=\"true\"/>\n                    <L7p:InputVariable stringValue=\"scope.requested\"/>\n                    <L7p:OutputVariable stringValue=\"requestedScope\"/>\n                    <L7p:SplitPattern stringValue=\"[ ]\"/>\n                </L7p:Split>\n                <L7p:Split>\n                    <L7p:IgnoreEmptyValues booleanValue=\"true\"/>\n                    <L7p:InputVariable stringValue=\"scope.registered\"/>\n                    <L7p:OutputVariable stringValue=\"registeredScope\"/>\n                    <L7p:SplitPattern stringValue=\"[ ]\"/>\n                </L7p:Split>\n                <L7p:ForEachLoop L7p:Usage=\"Required\" iterationLimit=\"100\" loopVariable=\"requestedScope\" variablePrefix=\"verifyScope\">\n                    <wsp:OneOrMore wsp:Usage=\"Required\">\n                        <L7p:ComparisonAssertion>\n                            <L7p:Expression1 stringValue=\"${registeredScope}\"/>\n                            <L7p:Expression2 stringValue=\"${verifyScope.current}\"/>\n                            <L7p:MultivaluedComparison multivaluedComparison=\"ANY\"/>\n                            <L7p:Predicates predicates=\"included\">\n                                <L7p:item binary=\"included\">\n                                    <L7p:RightValue stringValue=\"${verifyScope.current}\"/>\n                                </L7p:item>\n                            </L7p:Predicates>\n                        </L7p:ComparisonAssertion>\n                        <L7p:Regex>\n                            <L7p:AutoTarget booleanValue=\"false\"/>\n                            <L7p:OtherTargetMessageVariable stringValue=\"scope.requested\"/>\n                            <L7p:PatternContainsVariables booleanValue=\"true\"/>\n                            <L7p:Regex stringValue=\"^${verifyScope.current}|(\\s)${verifyScope.current}(\\s)|${verifyScope.current}$\"/>\n                            <L7p:Replace booleanValue=\"true\"/>\n                            <L7p:Replacement stringValue=\"$1$2\"/>\n                            <L7p:Target target=\"OTHER\"/>\n                        </L7p:Regex>\n                    </wsp:OneOrMore>\n                </L7p:ForEachLoop>\n                <wsp:OneOrMore wsp:Usage=\"Required\">\n                    <L7p:Regex>\n                        <L7p:AutoTarget booleanValue=\"false\"/>\n                        <L7p:OtherTargetMessageVariable stringValue=\"scope.requested\"/>\n                        <L7p:Regex stringValue=\"(\\w+)\"/>\n                        <L7p:Replacement stringValue=\"found\"/>\n                        <L7p:Target target=\"OTHER\"/>\n                    </L7p:Regex>\n                    <wsp:All wsp:Usage=\"Required\">\n                        <L7p:AuditDetailAssertion>\n                            <L7p:Detail stringValue=\"An invalid SCOPE was given. Given: '${remember_requested_scope}', registered: '${scope.registered}'\"/>\n                        </L7p:AuditDetailAssertion>\n                        <L7p:SetVariable>\n                            <L7p:Base64Expression stringValue=\"MTE1\"/>\n                            <L7p:VariableToSet stringValue=\"error.code\"/>\n                        </L7p:SetVariable>\n                        <L7p:FalseAssertion/>\n                    </wsp:All>\n                    <L7p:assertionComment>\n                        <L7p:Properties mapValue=\"included\">\n                            <L7p:entry>\n                                <L7p:key stringValue=\"LEFT.COMMENT\"/>\n                                <L7p:value stringValue=\"case: 05\"/>\n                            </L7p:entry>\n                            <L7p:entry>\n                                <L7p:key stringValue=\"RIGHT.COMMENT\"/>\n                                <L7p:value stringValue=\"If SCOPE.requested is empty now because it did not include any registered values at all fail the request\"/>\n                            </L7p:entry>\n                        </L7p:Properties>\n                    </L7p:assertionComment>\n                </wsp:OneOrMore>\n                <L7p:SetVariable>\n                    <L7p:Base64Expression stringValue=\"JHtzY29wZS5yZXF1ZXN0ZWR9\"/>\n                    <L7p:VariableToSet stringValue=\"scope.granted\"/>\n                </L7p:SetVariable>\n                <L7p:assertionComment>\n                    <L7p:Properties mapValue=\"included\">\n                        <L7p:entry>\n                            <L7p:key stringValue=\"LEFT.COMMENT\"/>\n                            <L7p:value stringValue=\"case: 04, 05\"/>\n                        </L7p:entry>\n                        <L7p:entry>\n                            <L7p:key stringValue=\"RIGHT.COMMENT\"/>\n                            <L7p:value stringValueReference=\"inline\"><![CDATA[SCOPE registered is a subset of SCOPE requested --> grant registered SCOPE;\n                registered:  scopea;\n                requested:  scopea scopeb;\n                grant:          scopea;]]></L7p:value>\n                        </L7p:entry>\n                    </L7p:Properties>\n                </L7p:assertionComment>\n            </wsp:All>\n            <L7p:assertionComment>\n                <L7p:Properties mapValue=\"included\">\n                    <L7p:entry>\n                        <L7p:key stringValue=\"RIGHT.COMMENT\"/>\n                        <L7p:value stringValue=\"Do not grant non-registered SCOPEs\"/>\n                    </L7p:entry>\n                </L7p:Properties>\n            </L7p:assertionComment>\n        </wsp:OneOrMore>\n        <L7p:Regex>\n            <L7p:AssertionComment assertionComment=\"included\">\n                <L7p:Properties mapValue=\"included\">\n                    <L7p:entry>\n                        <L7p:key stringValue=\"RIGHT.COMMENT\"/>\n                        <L7p:value stringValue=\"// remove [ ] at beginning and end of line\"/>\n                    </L7p:entry>\n                </L7p:Properties>\n            </L7p:AssertionComment>\n            <L7p:AutoTarget booleanValue=\"false\"/>\n            <L7p:OtherTargetMessageVariable stringValue=\"scope.granted\"/>\n            <L7p:Regex stringValue=\"^\\s{0,1000}|\\s{0,1000}$\"/>\n            <L7p:Replace booleanValue=\"true\"/>\n            <L7p:Replacement stringValue=\"\"/>\n            <L7p:Target target=\"OTHER\"/>\n        </L7p:Regex>\n        <L7p:Regex>\n            <L7p:AssertionComment assertionComment=\"included\">\n                <L7p:Properties mapValue=\"included\">\n                    <L7p:entry>\n                        <L7p:key stringValue=\"RIGHT.COMMENT\"/>\n                        <L7p:value stringValue=\"// remove mulitple subsequent [ ]\"/>\n                    </L7p:entry>\n                </L7p:Properties>\n            </L7p:AssertionComment>\n            <L7p:AutoTarget booleanValue=\"false\"/>\n            <L7p:OtherTargetMessageVariable stringValue=\"scope.granted\"/>\n            <L7p:Regex stringValue=\"\\s{2,1000}\"/>\n            <L7p:Replace booleanValue=\"true\"/>\n            <L7p:Replacement stringValue=\" \"/>\n            <L7p:Target target=\"OTHER\"/>\n        </L7p:Regex>\n    </wsp:All>\n</wsp:Policy>"
  }
}
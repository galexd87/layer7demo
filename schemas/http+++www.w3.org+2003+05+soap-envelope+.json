{
  "goid": "0000000000000000fffffffffffffffc",
  "systemId": "http://www.w3.org/2003/05/soap-envelope/",
  "checksum": "f73c1c611cb0023d29988485f7ed9acf961aba81",
  "targetNs": "http://www.w3.org/2003/05/soap-envelope",
  "content": "<?xml version='1.0'?>\n<!-- Schema defined in the SOAP Version 1.2 Part 1 specification\n     Recommendation:\n     http://www.w3.org/TR/2003/REC-soap12-part1-20030624/\n\n     Copyright (C)2003 W3C(R) (MIT, ERCIM, Keio), All Rights Reserved.\n     W3C viability, trademark, document use and software licensing rules\n     apply.\n     http://www.w3.org/Consortium/Legal/\n\n     This document is governed by the W3C Software License [1] as\n     described in the FAQ [2].\n\n     [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720\n     [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD\n-->\n\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n           xmlns:tns=\"http://www.w3.org/2003/05/soap-envelope\"\n           targetNamespace=\"http://www.w3.org/2003/05/soap-envelope\" \n\t\t   elementFormDefault=\"qualified\" >\n\n  <xs:import namespace=\"http://www.w3.org/XML/1998/namespace\" \n             schemaLocation=\"http://www.w3.org/2001/xml.xsd\"/>\n\n  <!-- Envelope, header and body -->\n  <xs:element name=\"Envelope\" type=\"tns:Envelope\" />\n  <xs:complexType name=\"Envelope\" >\n    <xs:sequence>\n      <xs:element ref=\"tns:Header\" minOccurs=\"0\" />\n      <xs:element ref=\"tns:Body\" minOccurs=\"1\" />\n    </xs:sequence>\n    <xs:anyAttribute namespace=\"##other\" processContents=\"lax\" />\n  </xs:complexType>\n\n  <xs:element name=\"Header\" type=\"tns:Header\" />\n  <xs:complexType name=\"Header\" >\n    <xs:annotation>\n\t  <xs:documentation>\n\t  Elements replacing the wildcard MUST be namespace qualified, but can be in the targetNamespace\n\t  </xs:documentation>\n\t</xs:annotation>\n    <xs:sequence>\n      <xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"  />\n    </xs:sequence>\n    <xs:anyAttribute namespace=\"##other\" processContents=\"lax\" />\n  </xs:complexType>\n  \n  <xs:element name=\"Body\" type=\"tns:Body\" />\n  <xs:complexType name=\"Body\" >\n    <xs:sequence>\n      <xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\n    </xs:sequence>\n    <xs:anyAttribute namespace=\"##other\" processContents=\"lax\" />\n  </xs:complexType>\n\n  <!-- Global Attributes.  The following attributes are intended to be\n  usable via qualified attribute names on any complex type referencing\n  them.  -->\n  <xs:attribute name=\"mustUnderstand\" type=\"xs:boolean\" default=\"0\" />\n  <xs:attribute name=\"relay\" type=\"xs:boolean\" default=\"0\" />\n  <xs:attribute name=\"role\" type=\"xs:anyURI\" />\n\n  <!-- 'encodingStyle' indicates any canonicalization conventions\n  followed in the contents of the containing element.  For example, the\n  value 'http://www.w3.org/2003/05/soap-encoding' indicates the pattern\n  described in the SOAP Version 1.2 Part 2: Adjuncts Recommendation -->\n\n  <xs:attribute name=\"encodingStyle\" type=\"xs:anyURI\" />\n\n  <xs:element name=\"Fault\" type=\"tns:Fault\" />\n  <xs:complexType name=\"Fault\" final=\"extension\" >\n    <xs:annotation>\n\t  <xs:documentation>\n\t    Fault reporting structure\n\t  </xs:documentation>\n\t</xs:annotation>\n    <xs:sequence>\n      <xs:element name=\"Code\" type=\"tns:faultcode\" />\n      <xs:element name=\"Reason\" type=\"tns:faultreason\" />\n      <xs:element name=\"Node\" type=\"xs:anyURI\" minOccurs=\"0\" />\n\t  <xs:element name=\"Role\" type=\"xs:anyURI\" minOccurs=\"0\" />\n      <xs:element name=\"Detail\" type=\"tns:detail\" minOccurs=\"0\" />\n    </xs:sequence>\n  </xs:complexType>\n\n  <xs:complexType name=\"faultreason\" >\n    <xs:sequence>\n\t  <xs:element name=\"Text\" type=\"tns:reasontext\" \n                  minOccurs=\"1\"  maxOccurs=\"unbounded\" />\n\t</xs:sequence>\n  </xs:complexType>\n\n  <xs:complexType name=\"reasontext\" >\n    <xs:simpleContent>\n\t  <xs:extension base=\"xs:string\" >\n\t    <xs:attribute ref=\"xml:lang\" use=\"required\" />\n\t  </xs:extension>\n\t</xs:simpleContent>\n  </xs:complexType>\n  \n  <xs:complexType name=\"faultcode\">\n    <xs:sequence>\n      <xs:element name=\"Value\"\n                  type=\"tns:faultcodeEnum\"/>\n      <xs:element name=\"Subcode\"\n                  type=\"tns:subcode\"\n                  minOccurs=\"0\"/>\n    </xs:sequence>\n  </xs:complexType>\n\n  <xs:simpleType name=\"faultcodeEnum\">\n    <xs:restriction base=\"xs:QName\">\n      <xs:enumeration value=\"tns:DataEncodingUnknown\"/>\n      <xs:enumeration value=\"tns:MustUnderstand\"/>\n      <xs:enumeration value=\"tns:Receiver\"/>\n      <xs:enumeration value=\"tns:Sender\"/>\n      <xs:enumeration value=\"tns:VersionMismatch\"/>\n    </xs:restriction>\n  </xs:simpleType>\n\n  <xs:complexType name=\"subcode\">\n    <xs:sequence>\n      <xs:element name=\"Value\"\n                  type=\"xs:QName\"/>\n      <xs:element name=\"Subcode\"\n                  type=\"tns:subcode\"\n                  minOccurs=\"0\"/>\n    </xs:sequence>\n  </xs:complexType>\n\n  <xs:complexType name=\"detail\">\n    <xs:sequence>\n      <xs:any namespace=\"##any\" processContents=\"lax\" minOccurs=\"0\" maxOccurs=\"unbounded\"  />\n    </xs:sequence>\n    <xs:anyAttribute namespace=\"##other\" processContents=\"lax\" /> \n  </xs:complexType>\n\n  <!-- Global element declaration and complex type definition for header entry returned due to a mustUnderstand fault -->\n  <xs:element name=\"NotUnderstood\" type=\"tns:NotUnderstoodType\" />\n  <xs:complexType name=\"NotUnderstoodType\" >\n    <xs:attribute name=\"qname\" type=\"xs:QName\" use=\"required\" />\n  </xs:complexType>\n\n\n  <!-- Global element and associated types for managing version transition as described in Appendix A of the SOAP Version 1.2 Part 1 Recommendation  -->  <xs:complexType name=\"SupportedEnvType\" >\n    <xs:attribute name=\"qname\" type=\"xs:QName\" use=\"required\" />\n  </xs:complexType>\n\n  <xs:element name=\"Upgrade\" type=\"tns:UpgradeType\" />\n  <xs:complexType name=\"UpgradeType\" >\n    <xs:sequence>\n\t  <xs:element name=\"SupportedEnvelope\" type=\"tns:SupportedEnvType\" minOccurs=\"1\" maxOccurs=\"unbounded\" />\n\t</xs:sequence>\n  </xs:complexType>\n\n\n</xs:schema>"
}